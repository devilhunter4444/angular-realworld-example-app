name: Publish package to GitHub Packages

on:
  push:
    branches:  
      - main
  workflow_call:
    inputs:
      node-version:
        description: Optionally pass the Node version. Default value is 12.x
        required: false
        type: string
        default: 18.x

jobs:
  build-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          cache: npm

      - name: Get Project Version from package.json
        run: |
          projectVersion=$(cat package.json | grep -o '"version": *"[^"]*' | awk -F'"' '{ print $4 }')
          echo "PROJECT_VERSION=$projectVersion" >> $GITHUB_ENV

      - name: Construct the final build version
        run: |
          echo "The Project Version from package.json is ${{ env.PROJECT_VERSION }}"
          echo "The build number is ${{ github.run_number }}"
          buildVersion=${{ env.PROJECT_VERSION }}-${{ github.run_number }}
          echo "BUILD_VERSION=$buildVersion" >> $GITHUB_ENV

      - run: npm install -g @angular/cli 
      - run: npm install
      
      - name: Build
        run: npm run build

      # - name: Copy build files to dist
      #   run: cp -r ./dist/new-angular/app/* ./dist/

      - name: Publish to GitHub Packages
        run: |
            npm config set //npm.pkg.github.com/:_authToken ${{ secrets.GH_TOKEN }}
            npm publish --access public
        env:
            NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}




# name: Publish package to GitHub Packages

# on:
#   push:
#     branches:  
#       - main
#   workflow_dispatch:
#     inputs:
#       node-version:
#         description: Optionally pass the Node version. Default value is 12.x
#         required: false
#         type: string
#         default: 18.x

# jobs:
#   build-publish:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4
#       # Setup .npmrc file to publish to npm
#       - uses: actions/setup-node@v3
#         with:
#           node-version: '18.x'
#           registry-url: 'https://registry.npmjs.org'

#       - run: npm install -g @angular/cli 
#       - run: npm install 

#       - name: Get Project Version from package.json
#         run: |
#           projectVersion=$(cat package.json | grep -o '"version": *"[^"]*' | awk -F'"' '{ print $4 }')
#           echo "PROJECT_VERSION=$projectVersion" >> $GITHUB_ENV

#       - name: Construct the final build version
#         run: |
#           echo "The Project Version from package.json is ${{ env.PROJECT_VERSION }}"
#           echo "The build number is ${{ github.run_number }}"
#           buildVersion=${{ env.PROJECT_VERSION }}-${{ github.run_number }}
#           echo "BUILD_VERSION=$buildVersion" >> $GITHUB_ENV

         
     
#       - name: Build
#         run: npm run build

#       - name: Publish to npm
#         run: npm publish --access=public
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}



#   # jobs:
#   # build:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v4
#   #     # Setup .npmrc file to publish to npm
#   #     - uses: actions/setup-node@v3
#   #       with:
#   #         node-version: '20.x'
#   #         registry-url: 'https://registry.npmjs.org'
#   #     - run: npm ci
#   #     - run: npm publish
#   #       env:
#   #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
